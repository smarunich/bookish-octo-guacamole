- avi_api_session:
    avi_credentials: "{{ avi_credentials }}"
    tenant: "*"
    http_method: get
    path: virtualservice?include_name
    params:
        fields: name,enabled,tenant_ref,cloud_ref,se_group_ref
  register: vs_collect
  name: Collect VS Info
- avi_virtualservice:
    avi_api_patch_op: replace
    avi_api_update_method: patch
    avi_credentials: "{{ avi_credentials }}"
    tenant: "{{ vs_detail.tenant_ref | regex_replace('^.*#') }}"
    tenant_ref: '/api/tenant?name={{ vs_detail.tenant_ref | regex_replace("^.*#") }}'
    name: "{{ vs_detail.name }}"
    cloud_ref: '/api/cloud?name={{ vs_detail.cloud_ref | regex_replace("^.*#") }}'
    enabled: false
  name: Change Status of VS
  loop: "{{ vs_collect['obj']['results'] }}"
  loop_control:
    loop_var: vs_detail
- avi_systemconfiguration:
    avi_credentials: "{{ avi_credentials }}"
    email_configuration:
        mail_server_name: localhost
        mail_server_port: 25
        smtp_type: SMTP_LOCAL_HOST
        from_email: admin@avicontroller.net
    global_tenant_config:
        se_in_provider_context: true
        tenant_access_to_provider_se: true
        tenant_vrf: false
    dns_configuration:
        search_domain: vclass.local
        server_list:
            - type: V4
              addr: 172.20.10.10
    docker_mode: false
    dns_virtualservice_refs:
        - 'https://sa-avicon-01.vclass.local/api/virtualservice/?name=sa-dns-01'
    portal_configuration:
        redirect_to_https: true
        enable_https: true
        sslkeyandcertificate_refs:
            - 'https://sa-avicon-01.vclass.local/api/sslkeyandcertificate/?name=HOL-Site-A-Controller'
    ntp_configuration:
        ntp_server_list:
            - 
                type: V4
                addr: 172.20.10.10
- avi_api_session:
    avi_credentials: "{{ avi_credentials }}"
    tenant: "admin"
    http_method: get
    path: serviceengine-inventory
    params:
        cloud_ref.name: Default-Cloud
  register: se_collect
  name: Collect Service Engine Info
- name: Change network adapter settings of virtual machine
  vmware_guest_network:
    hostname: "{{ vmware.hostname }}"
    username: "{{ vmware.username }}"
    password: "{{ vmware.password }}"
    datacenter: "{{ vmware.datacenter }}"
    validate_certs: no
    name: "{{ se_collect_name['config']['name'] }}"
    gather_network_info: false
    networks:
      - name: "pg-SA-Management"
        state: present
        label: "Network adapter 1"
        connected: true
  delegate_to: localhost
  when: se_collect_name['runtime']['oper_status']['state'] == "OPER_UP"
  loop: "{{ se_collect['obj']['results'] }}"
  loop_control:
    loop_var: se_collect_name
- avi_api_session:
    avi_credentials: "{{ avi_credentials }}"
    tenant: "*"
    http_method: get
    path: serviceenginegroup-inventory
    params:
        fields: serviceegnines
        name: Default-Group
        cloud_ref.name: Default-Cloud
  register: seg_collect
  name: Collect Service Engine Info
- avi_api_session:
    avi_credentials: "{{ avi_credentials }}"
    tenant: admin
    http_method: delete
    path: 'serviceengine/{{ se_uuid | regex_replace("^.*serviceengine/")  }}'
  name: SE Cleanup
  when: seg_collect['obj']['results'][0]['serviceengines']|length > 2
  loop: "{{ seg_collect['obj']['results'][0]['serviceengines'] }}"
  loop_control:
    loop_var: se_uuid
- name: Align SE Placement Network
  avi_network:
      avi_api_patch_op: replace
      avi_api_update_method: patch
      avi_credentials: "{{ avi_credentials }}"
      name: pg-SA-VIP
      configured_subnets:
          - 
              prefix:
                  ip_addr:
                      type: V4
                      addr: 172.20.120.0
                  mask: 24
              static_ranges:
                  - 
                      begin:
                          type: V4
                          addr: 172.20.120.90
                      end:
                          type: V4
                          addr: 172.20.120.119
      tenant_ref: /api/tenant/?name=admin
      tenant: admin
      cloud_ref: '/api/cloud/?name=Default-Cloud'
- name: Align SEG Configuration
  avi_serviceenginegroup:
      avi_credentials: "{{ avi_credentials }}"
      vcpus_per_se: 1
      se_name_prefix: saseg01
      max_vs_per_se: 100
      max_scaleout_per_vs: 2
      vcenter_folder: AviSeFolder
      min_scaleout_per_vs: 2
      vcenter_datastore_mode: "VCENTER_DATASTORE_ANY"
      name: Default-Group
      buffer_se: 0
      mem_reserve: false
      max_se: 2
      memory_per_se: 2048
      algo: PLACEMENT_ALGO_PACKED
      tenant_ref: /api/tenant/?name=admin
      tenant: admin
      cloud_ref: '/api/cloud/?name=Default-Cloud'
- name: Align Cloud Configuration
  avi_cloud:
      avi_credentials: "{{ avi_credentials }}"
      vtype: CLOUD_VCENTER
      ipam_provider_ref: '/api/ipamdnsproviderprofile/?name=ipam-sa'
      name: Default-Cloud
      vcenter_configuration:
          username: administrator@vsphere.local
          datacenter: SA-Datacenter
          management_network: '/api/vimgrnwruntime/?name=pg-SA-Management'
          privilege: WRITE_ACCESS
          vcenter_url: sa-vcsa-01.vclass.local
          password: "{{ avi_credentials.password }}"
      tenant_ref: '/api/tenant/?name=admin'
      tenant: admin
      dhcp_enabled: true
      prefer_static_routes: false
      license_type: LIC_CORES
      mtu: 1500
      apic_mode: false
      enable_vip_static_routes: false
      dns_provider_ref: '/api/ipamdnsproviderprofile/?name=dns-sa'
- avi_vrfcontext:
    avi_credentials: "{{ avi_credentials }}"
    cloud_ref: '/api/cloud/?name=Default-Cloud'
    name: global
    static_routes:
        - 
          route_id: 1
          prefix: 
            mask: 0
            ip_addr: 
              type: "V4"
              addr: 0.0.0.0
          next_hop:
            type: "V4"
            addr: 172.20.120.10
  name: Align Routes
- avi_virtualservice:
    avi_api_patch_op: replace
    avi_api_update_method: patch
    avi_credentials: "{{ avi_credentials }}"
    tenant: "{{ vs_detail.tenant_ref | regex_replace('^.*#') }}"
    tenant_ref: '/api/tenant?name={{ vs_detail.tenant_ref | regex_replace("^.*#") }}'
    name: "{{ vs_detail.name }}"
    cloud_ref: '/api/cloud?name={{ vs_detail.cloud_ref | regex_replace("^.*#") }}'
    enabled: true
  name: Change Status of VS
  loop: "{{ vs_collect['obj']['results'] }}"
  loop_control:
    loop_var: vs_detail